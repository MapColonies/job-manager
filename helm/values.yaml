global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: {}
  ingress:
    domain: 'apps.aroapp.io'
  ca:
    secretName: ''
    path: '/usr/local/share/ca-certificates'
    key: 'ca.crt'
  db:
    host: "localhost"
    name: "common"
    port: 5432
    schema: ""
    logging: false
    sslEnabled: false
    secrets:
      useExternal: false
      externalSecretName: ''

enabled: true
environment: "development"
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030 #for minikube deployment only
resetOnConfigChange: true

cloudProvider:
  dockerRegistryUrl: "my-registry-url.io"
  flavor: "openshift"
  imagePullSecretName: ""

image:
  repository: "job-manager"
  tag: "latest"

authentication:
  ssl:
    enabled: false
    useExternal: false
    externalSecretName: ""

db:
  host: "localhost"
  name: "common"
  port: 5432
  schema: "JobManager"
  sslEnabled: false
  logging: false
  secrets:
    useExternal: false
    externalSecretName: ''    
  

# ====================================================================================================
# Local certificate files variables
# ====================================================================================================

local:
  certs:
    ca: "certs/ca.crt"
    ssl: "certs/openssl.cnf"
  db:
    createSecret: false
    userName: postgres
    password: postgres
    certs:
      ca: certs/ca.pem
      key: certs/key.pem
      cert: certs/cert.pem

env:
  port: 80
  targetPort: 8080
  logLevel: "warn"
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: "10mb"
  tracing:
    enabled: false
    url: "http://localhost:55681/v1/trace"
    ratio: 1
  metrics:
    enabled: false
    url: "http://localhost:55681/v1/metrics"

resources:
  enabled: true
  value:
    limits:
      cpu: "100m"
      memory: "128Mi"
    requests:
      cpu: "100m"
      memory: "128Mi"

route:
  enabled: false
  path: /
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)

ingress:
  enabled: false
  type: 'nginx-org' # supported values: 'nginx-org' | 'nginx-kubernetes'
  path: /
  host: ''
  domain: ''
  cors:
    enabled: true
    origin: '*'
